{{- range .Values.priority }}
apiVersion: scheduling.k8s.io/v1
kind: PriorityClass
metadata:
  name: {{ .name }}
value: {{ .value }}
globalDefault: {{ .default | default false }}
---
{{- end }}
apiVersion: apps/v1
kind: {{ .Values.foldingathome.kind | default "Deployment" }}
metadata:
  name: {{ .Release.Name }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.foldingathome.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
{{- if .Values.foldingathome.priorityClassName }}
      priorityClassName: {{ .Values.foldingathome.priorityClassName }}
{{- end }}
      initContainers:
      - name: setup
        image: busybox
        command: ["/bin/sh", "-c", "if [[ ! -f /config/config.xml ]]; then cp /etc/fahclient/config.xml /config; fi"]
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: Etc/UTC
        volumeMounts:
        - name: foldingathome
          mountPath: /etc/fahclient/config.xml
          subPath: config.xml
        - name: config
          mountPath: /config
      containers:
      - name: foldingathome
        image: {{ .Values.foldingathome.image }}
        # FAHClient renames the given config to update with the slots, we need
        # to have an actual file not the configmap being passed to it.
        # command: ["/bin/bash", "-c", "mkdir -p /etc/fahclient; cp /config.xml /etc/fahclient/config.xml && FAHClient --web-allow=0/0:7396 --allow=0/0:7396 --config /etc/fahclient/config.xml"]
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        - name: TZ
          value: Etc/UTC
        ports:
        - containerPort: 7396
          name: http
          protocol: TCP
        volumeMounts:
        - name: config
          mountPath: /config
        resources:
{{ toYaml .Values.foldingathome.resources | indent 10 }}
      affinity:
{{ toYaml .Values.foldingathome.affinity | indent 8 }}
      volumes:
      - name: foldingathome
        configMap:
          name: cm-{{ .Release.Name }}
{{- if eq (.Values.foldingathome.kind | default "Deployment") "Deployment" }}
      - name: config
{{- end }}
{{- if eq (.Values.foldingathome.kind | default "Deployment") "StatefulSet" }}
  volumeClaimTemplates:
  - metadata:
      name: config
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 256Mi
{{- end }}
---
{{- if .Values.hpa.enabled }}
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2
metadata:
  name: hpa-{{ .Release.Name }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: {{ .Values.foldingathome.kind | default "Deployment" }}
    name: {{ .Release.Name }}
  minReplicas: {{ .Values.hpa.minReplicas }}
  maxReplicas: {{ .Values.hpa.maxReplicas }}
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.hpa.targetCPU }}
{{- end }}
